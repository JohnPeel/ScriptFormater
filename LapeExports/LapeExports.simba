program new;
var
  s: string;
begin
  s := 'UInt8 Int8 UInt16 Int16 UInt32 Int32 UInt64 Int64 Single Double Currency Extended Boolean ByteBool WordBool LongBool AnsiChar WideChar ShortString AnsiString WideString UnicodeString Variant Pointer String Char EvalBool TMethod SizeInt SizeUInt NativeInt NativeUInt PtrInt PtrUInt True False nil _Write _WriteLn _Natify Natify _Assert _AStr_SetLen _WStr_SetLen _UStr_SetLen _SStr_Copy _AStr_Copy _WStr_Copy _UStr_Copy _AStr_Delete _WStr_Delete _UStr_Delete _AStr_Insert _WStr_Insert _UStr_Insert GetMem AllocMem FreeMem FreeMemSize ReallocMem FillMem Move Assigned RaiseException UniqueString _Dispose _Assign ToString _Swap _ArraySetLength _ArrayCopy _ArrayDelete _ArrayInsert _EnumToString _ArrayToString Pi RandSeed Abs Power Sqr Sqrt ArcTan Ln Sin Cos Exp Round Frac Int Trunc Ceil Floor Random Randomize TTextLineBreakStyle TReplaceFlags UpperCase LowerCase UpCase CompareStr CompareMem CompareText SameText AnsiUpperCase AnsiLowerCase AnsiCompareStr AnsiCompareText AnsiSameText AnsiSameStr Trim TrimLeft TrimRight PadL PadR QuotedStr AnsiQuotedStr AnsiDequotedStr WrapText AdjustLineBreaks IntToHex IntToStr StrToInt StrToIntDef StrToInt64 StrToInt64Def StrToUInt64 StrToUInt64Def FloatToStr StrToFloat StrToFloatDef CurrToStr StrToCurr StrToCurrDef StrToBool BoolToStr StrToBoolDef Format FormatFloat FormatCurr LastDelimiter StringReplace IsDelimiter Pos StringOfChar HoursPerDay MinsPerHour SecsPerMin MSecsPerSec MinsPerDay SecsPerDay MSecsPerDay DateDelta TDateTime TTime EncodeDate EncodeTime DecodeDate DecodeDateFully DecodeTime Date Time Now GetTickCount Sleep ReplaceTime ReplaceDate FormatDateTime StrToDate StrToDateDef StrToTime StrToTimeDef StrToDateTime StrToDateTimeDef Null Unassigned HRESULT TVarType TVariantRelationship VarEmpty VarNull VarSmallInt VarInteger VarSingle VarDouble VarDate VarCurrency VarOleStr VarDispatch VarError VarBoolean VarVariant VarUnknown VarShortInt VarByte VarWord VarLongWord VarInt64 VarStrArg VarString VarAny VarUString VarUInt64 VarTypeMask VarArray VarByRef VarType VarAsType VarIsByRef VarIsEmpty VarIsNull VarIsClear VarIsError VarAsError VarIsCustom VarIsOrdinal VarIsFloat VarIsNumeric VarIsStr VarIsArray VarToStr VarToStrDef VarToWideStr VarToWideStrDef VarToUnicodeStr VarToUnicodeStrDef VarToDateTime VarFromDateTime VarInRange VarEnsureRange VarSameValue VarCompareValue VarTypeIsValidArrayType VarTyoeIsValidElementType VarArrayCreate VarArrayOf VarArrayRedim VarArrayIsPSafeArray VarCopyNoInd VarArrayDimCount VarArrayLowBound VarArrayHighBound VarArrayLock VarArrayUnLock VarArryRef VarArrayGet VarArraySet GetArrayLength SetArrayLength Byte ShortInt Word SmallInt LongWord LongInt Cardinal Integer PChar NativeString AnyString tbtString ___Pointer TVariantArray Chr StrGet StrGet2 StrSet WStrGet VarArrayGet VarArraySet PadZ Replicate Int64ToStr UInt64ToStr ExceptionToString RaiseException erNoError erCannotImport erInvalidType erInternalError erInvalidHeader erInvalidOpcode erInvalidOpcodeParameter erNoMainProc erOutOfGlobalVarsRange erOutOfProcRange erOutOfRange erOutOfStackRange erTypeMismatch erUnexpectedEof erVersionError erDivideByZero erMathError erCouldNotCallProc erOutofRecordRange erOutOfMemory erException erNullPointerException erNullVariantError erInterfaceNotSupported erCustomError';
  WriteLn(Base64Encode(CompressString(s)));
end.
